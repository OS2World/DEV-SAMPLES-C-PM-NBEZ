Name: 		NBEZ
Descripcion: 	Notebook Control Sample
Date: 		2023-04-30
Version:	1.01
----------------------------   

DESCRIPTION
-----------
NBEZ.EXE is a sample program that demonstrates setting up a notebook control.
It creates a frame/client window and a notebook control is created as a child
of the client window, similar to how the Settings notebook does it.

The Notebook created by this program only has pages with MAJOR tabs.

All the Notebook pages are associated with dialog boxes. Those dialog boxes are
loaded and associated with the page at notebook initialization.

A Notebook control is actually a rather simple control. Think of it as just a
way to stack up all your dialogs into a neat pile. If you have ever had an
application that needed the user to go thru more than one dialog to accomplish
something, you will appreciate that a notebook is the way to go. You can
picture all those dialogs being scattered about on the screen. The Notebook's
sole purpose is to take those dialogs and organize them so the user can input
all their information in an organized fashion.

The Notebook *does* bring with it some issues. The main one that I see is how
to validate the fields in each dialog - when the user tabs out of the field,
when the user switches notebook pages or when the user closes the notebook. In
my notebooks I usually use a combination of the 3.

For a more functional Notebook sample that demonstrates a lot more of the
Notebook messages, loads the dialogs on demand and has pages with MINOR tabs,
get NBBASE.ZIP. I essentially took that program and pared it down to provide
this sample.

Hopefully NBEZ will be of some use to beginning notebook programmers.

REQUIREMENTS
------------
- yum install git gcc make libc-devel binutils watcom-wrc watcom-wlink-hll

COMPILE INSTRUCTIONS
--------------------
This version of this sample was modified to compile on ArcaOS with GCC 9 compiler. 

1) Remember to have correct header files your path. For GCC the correct ones are the included on the "libc-devel", not the ones from the OS/2 Toolkit. Check your config.sys for "SET INCLUDE=C:\usr\include"

2) Since I'm using the Watcom Resource Compiler (open source) instead of the classic rc.exe, and the the Watcom Linker, intead of the classic ilink.exe, add to your config.sys...
 SET EMXOMFLD_LINKER=wl.exe
 SET EMXOMFLD_TYPE=WLINK
 SET EMXOMFLD_RC_TYPE=WRC
 SET EMXOMFLD_RC=wrc.exe

3) Run "nmake" or "nmake 2>&1 |tee make.out" to get the log file.


TOOLS USED
----------
- ArcaOS	- Verion 5.0.7
- wrc 		- Version 2.0beta1
- wl		- Watcom Linker
- gcc		- gcc (GCC) 9.2.0 20190812 (OS/2 RPM build 9.2.0-5.oc00)
- make 		- Version 3.81 k2 (2017-11-10)

TROUBLESHOOT
------------
The compile produce will run by just executing make on the directory, but a compile.cmd file is includes to store the log in a file. If you want to save the log file you can run it as "nmake 2>&1 |tee make.out". The log will be saved into the "make.out" file.

HISTORY
---------- 
- 1.01 - 2023-05-01
Changed version to compile on gcc and to run on ArcaOS 5.0.7.

- 1.0
Original version Rick Fishman / Code Blazers, Inc.

LICENSE
-------
The 3-Clause BSD License.

AUTHORS
-------
- Martin Iturbide (2023)
- Rick Fishman / Code Blazers, Inc.